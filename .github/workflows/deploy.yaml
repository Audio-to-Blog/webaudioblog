name: Deploy to ECR

on:
 
  push:
   

env:
  ECR_REPOSITORY: ids721final

  EKS_CLUSTER_NAME: my-cluster
  AWS_REGION: us-east-1

jobs:
  
  build:
    
    name: Deployment
    runs-on: ubuntu-latest

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f src/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION


    # - name: Create K8s secret
    #   run: |
    #     kubectl create secret generic my-secret \
    #     --from-literal=AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
    #     --from-literal=AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
    #     -o yaml | kubectl apply -f -

    # - name: Deploy to EKS
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
    #     IMAGE_TAG: ${{ steps.commit.outputs.short }}
    #   run: |
    #     sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
    #     kubectl apply -f manifests/hello-app-deployment.yaml
    #     kubectl apply -f manifests/hello-app-service.yaml


    # - name: Describe Kubernetes secret
    #   run: |
    #     kubectl describe secret my-secret